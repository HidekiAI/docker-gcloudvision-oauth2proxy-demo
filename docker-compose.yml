version: '3.11'

networks:
  # the host (edge-router) that is hosting the docker containers should have a static IP address of .1
  my-rust-app-network: 
    driver: bridge
    ipam:
      driver: default
      config:
        # assign a subnet mainly for debugging purposes, otherwise the port exposed on THIS host should suffice
        - subnet: 10.86.86.0/24
          gateway: 10.86.86.1

services:
  # gateway is the nginx-proxy that routes to the internal-developers and www services
  # all requests to internal-developers.hai-techwares.com and www.hai-techwares.com will be routed to the internal-developers and www services respectively
  # and the internal-developers and www services will be able to access each other via their service names
  # it is also the only service that is exposed to the outside world (hence it's the proxy)
  gateway:
    hostname: gateway
    #restart: unless-stopped
    image: jwilder/nginx-proxy
    depends_on:
      - internal-developers
      - www
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./vhost.d:/etc/nginx/vhost.d:ro"
      - "./ssl/gateway/certs:/etc/nginx/certs/:ro"
      - "./www/gateway:/usr/share/nginx/html:ro"
    networks:
      # gateways has to have a static IP so that edge-routers can route to here...
      my-rust-app-network:
        ipv4_address: 10.86.86.86
        aliases:
          - internal-developers.hai-techwares.com
          - www.hai-techwares.com
    links:
      - internal-developers
      - www

  internal-developers:
    # see vhost.d/internal-developers.hai-techwares.com for the proxy configuration (in particular, "proxy_pass" location which port-forwards to port 4180)
    hostname: internal-developers
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    #no need to add any args such as "--http-address=0.0.0.0:4180" for they should just all be set in oauth2_proxy.cfg file
    command: 
      - "--config=/etc/oauth2_proxy.cfg"
    # port-forward 4180 on THIS machine to 4180 in the container
    ports:
      - 4180:4180/tcp
      - 4080:80/tcp
      - 4443:443/tcp
    # environment variables for the nginx-proxy analyzer/generator to dynamically generate the proxy configuration
    environment:
      - VIRTUAL_HOST=internal-developers.hai-techwares.com
      - VIRTUAL_PROTO=https
      - VIRTUAL_PORT=4180
      - OAUTH2_PROXY_CONFIG=/etc/oauth2_proxy.cfg
    volumes:
      - "./oauth2_proxy.cfg:/etc/oauth2_proxy.cfg:ro"
      - "./www/internal-developers:/usr/share/nginx/html:ro"
      - "./ssl/internal-developers/certs:/etc/nginx/certs/:ro"
    #restart: unless-stopped
    # from inside the my-rust-app container, you could access the oauth2-proxy service at http://oauth2-proxy:4180.
    networks:
      my-rust-app-network: 
        # sadly, if I do not specify the IP address, things just don't work...
        ipv4_address: 10.86.86.150

  # www is a static website that is hosted on nginx for the purpose of my-rust-app to be able to access it
  # it is separate from my-rust-app because the nginx:latest image could be using alpine instead of debian
  # as well as it is a good practice to separate the static website from the dynamic web-app
  www:
    hostname: www
    # rather than using apache2, we use nginx with static html files
    image: nginx:latest
    volumes:
      - "./www/www:/usr/share/nginx/html:ro"
      - "./ssl/www/certs:/etc/nginx/certs/:ro"
    ports:
      - 2080:80/tcp
      - 2443:443/tcp
    # environment variables for the nginx-proxy analyzer/generator to dynamically generate the proxy configuration
    environment:
      - VIRTUAL_HOST=www.hai-techwares.com
      - VIRTUAL_PROTO=https
      - VIRTUAL_PORT=80,443
    #restart: unless-stopped
    networks:
      my-rust-app-network: 
        # sadly, if I do not specify the IP address, things just don't work...
        ipv4_address: 10.86.86.100

  my-rust-app:
    hostname: my-rust-app
    image: debian:latest
    # port forward 8000 on THIS host to port 8000 in the container
    depends_on:
      - gateway
    # from inside the my-rust-app container, you could access the oauth2-proxy service at http://oauth2-proxy:4180.
    networks:
      my-rust-app-network: 
        # sadly, if I do not specify the IP address, things just don't work...
        ipv4_address: 10.86.86.200